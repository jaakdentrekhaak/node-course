{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import \"express-async-errors\";\nimport express, { Application, NextFunction, Request, Response } from \"express\";\nimport { UserController } from \"./controllers/users/user.controller.js\";\nimport {\n  getMetadataArgsStorage,\n  RoutingControllersOptions,\n  useExpressServer,\n} from \"routing-controllers\";\nimport { errorMiddleware, getAuthenticator } from \"@panenco/papi\";\nimport { AuthController } from \"./controllers/auth/auth.controller.js\";\nimport { validationMetadatasToSchemas } from \"class-validator-jsonschema\";\nimport { getMetadataStorage } from \"class-validator\";\nimport swaggerUi from \"swagger-ui-express\";\nimport { routingControllersToSpec } from \"routing-controllers-openapi\";\n\nexport class App {\n  host: Application;\n  constructor() {\n    // init server\n    this.host = express();\n    this.host.use(express.json());\n\n    this.host.use((req: Request, res: Response, next: NextFunction) => {\n      console.log(req.method, req.url);\n      next();\n    });\n\n    this.host.get(\"/\", (req: Request, res: Response, next: NextFunction) => {\n      res.send(\"Hello World!\");\n    });\n\n    this.initializeControllers([AuthController, UserController]);\n\n    this.host.use(errorMiddleware);\n\n    this.initializeSwagger();\n  }\n\n  listen() {\n    this.host.listen(3000, () => {\n      console.info(`ðŸš€ http://localhost:3000`);\n      console.info(`========================`);\n    });\n  }\n\n  private initializeControllers(controllers: Function[]) {\n    useExpressServer(this.host, {\n      // Link the express host to routing-controllers\n      cors: {\n        origin: \"*\",\n        exposedHeaders: [\"x-auth\"],\n      },\n      controllers,\n      defaultErrorHandler: false, // Disable the default error handler. We will handle errors through papi.\n      routePrefix: \"/api\",\n      authorizationChecker: getAuthenticator(\"very_secret\"), // Tell routing-controllers to use the papi authentication checker\n    });\n  }\n\n  private initializeSwagger() {\n    const schemas = validationMetadatasToSchemas({\n      classValidatorMetadataStorage: getMetadataStorage(),\n      refPointerPrefix: \"#/components/schemas/\",\n    });\n\n    const routingControllersOptions: RoutingControllersOptions = {\n      routePrefix: \"/api\",\n    };\n\n    const storage = getMetadataArgsStorage();\n    const spec = routingControllersToSpec(storage, routingControllersOptions, {\n      components: {\n        schemas,\n        securitySchemes: {\n          JWT: {\n            in: \"header\",\n            name: \"x-auth\",\n            type: \"apiKey\",\n            bearerFormat: \"JWT\",\n            description:\n              'JWT Authorization header using the JWT scheme. Example: \"x-auth: {token}\"',\n          },\n        },\n      },\n      security: [{ JWT: [] }],\n    });\n\n    this.host.use(\"/docs\", swaggerUi.serve, swaggerUi.setup(spec));\n  }\n}\n"],"names":["express","UserController","getMetadataArgsStorage","useExpressServer","errorMiddleware","getAuthenticator","AuthController","validationMetadatasToSchemas","getMetadataStorage","swaggerUi","routingControllersToSpec","App","host","constructor","use","json","req","res","next","console","log","method","url","get","send","initializeControllers","initializeSwagger","listen","info","controllers","cors","origin","exposedHeaders","defaultErrorHandler","routePrefix","authorizationChecker","schemas","classValidatorMetadataStorage","refPointerPrefix","routingControllersOptions","storage","spec","components","securitySchemes","JWT","in","name","type","bearerFormat","description","security","serve","setup"],"mappings":"AAAA,OAAO,uBAAuB;AAC9B,OAAOA,aAA+D,UAAU;AAChF,SAASC,cAAc,QAAQ,yCAAyC;AACxE,SACEC,sBAAsB,EAEtBC,gBAAgB,QACX,sBAAsB;AAC7B,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,gBAAgB;AAClE,SAASC,cAAc,QAAQ,wCAAwC;AACvE,SAASC,4BAA4B,QAAQ,6BAA6B;AAC1E,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,OAAOC,eAAe,qBAAqB;AAC3C,SAASC,wBAAwB,QAAQ,8BAA8B;AAEvE,OAAO,MAAMC;IACXC,KAAkB;IAClBC,aAAc;QACZ,cAAc;QACd,IAAI,CAACD,IAAI,GAAGZ;QACZ,IAAI,CAACY,IAAI,CAACE,GAAG,CAACd,QAAQe,IAAI;QAE1B,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,CAACE,KAAcC,KAAeC;YAC1CC,QAAQC,GAAG,CAACJ,IAAIK,MAAM,EAAEL,IAAIM,GAAG;YAC/BJ;QACF;QAEA,IAAI,CAACN,IAAI,CAACW,GAAG,CAAC,KAAK,CAACP,KAAcC,KAAeC;YAC/CD,IAAIO,IAAI,CAAC;QACX;QAEA,IAAI,CAACC,qBAAqB,CAAC;YAACnB;YAAgBL;SAAe;QAE3D,IAAI,CAACW,IAAI,CAACE,GAAG,CAACV;QAEd,IAAI,CAACsB,iBAAiB;IACxB;IAEAC,SAAS;QACP,IAAI,CAACf,IAAI,CAACe,MAAM,CAAC,MAAM;YACrBR,QAAQS,IAAI,CAAC,CAAC,wBAAwB,CAAC;YACvCT,QAAQS,IAAI,CAAC,CAAC,wBAAwB,CAAC;QACzC;IACF;IAEQH,sBAAsBI,WAAuB,EAAE;QACrD1B,iBAAiB,IAAI,CAACS,IAAI,EAAE;YAC1B,+CAA+C;YAC/CkB,MAAM;gBACJC,QAAQ;gBACRC,gBAAgB;oBAAC;iBAAS;YAC5B;YACAH;YACAI,qBAAqB;YACrBC,aAAa;YACbC,sBAAsB9B,iBAAiB;QACzC;IACF;IAEQqB,oBAAoB;QAC1B,MAAMU,UAAU7B,6BAA6B;YAC3C8B,+BAA+B7B;YAC/B8B,kBAAkB;QACpB;QAEA,MAAMC,4BAAuD;YAC3DL,aAAa;QACf;QAEA,MAAMM,UAAUtC;QAChB,MAAMuC,OAAO/B,yBAAyB8B,SAASD,2BAA2B;YACxEG,YAAY;gBACVN;gBACAO,iBAAiB;oBACfC,KAAK;wBACHC,IAAI;wBACJC,MAAM;wBACNC,MAAM;wBACNC,cAAc;wBACdC,aACE;oBACJ;gBACF;YACF;YACAC,UAAU;gBAAC;oBAAEN,KAAK,EAAE;gBAAC;aAAE;QACzB;QAEA,IAAI,CAAChC,IAAI,CAACE,GAAG,CAAC,SAASL,UAAU0C,KAAK,EAAE1C,UAAU2C,KAAK,CAACX;IAC1D;AACF"}